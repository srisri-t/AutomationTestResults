#!/usr/bin/env node
const fs=require("fs"),path=require("path"),testResultsDir=__dirname,jsonFiles=fs.readdirSync(testResultsDir).filter(e=>e.endsWith(".json")&&"index.json"!==e).sort(),reports=jsonFiles.map((e,s)=>{const t=path.join(testResultsDir,e),r=fs.statSync(t);try{const n=JSON.parse(fs.readFileSync(t,"utf8")),i=Array.isArray(n)?n:n.features||[];let a=0,o=0,l=0,p=0;return i.forEach(e=>{e.elements&&e.elements.forEach(e=>{if("scenario"===e.type){a++;const s=e.steps||[];p+=s.length;const t=s.some(e=>e.result&&"failed"===e.result.status);t?l++:o++}})}),{id:s+1,filename:e,name:e.replace(/\.json$/,"").replace(/[-_]/g," "),timestamp:r.mtime.toISOString(),size:r.size,features:i.length,scenarios:a,steps:p,passed:o,failed:l,status:l>0?"failed":"passed"}}catch(n){return console.error(`Error processing ${e}:`,n.message),{id:s+1,filename:e,name:e.replace(/\.json$/,"").replace(/[-_]/g," "),timestamp:r.mtime.toISOString(),size:r.size,features:0,scenarios:0,steps:0,passed:0,failed:0,status:"error"}}}),index={reports,lastUpdated:(new Date).toISOString(),version:"1.0.0",totalReports:reports.length};fs.writeFileSync(path.join(testResultsDir,"index.json"),JSON.stringify(index,null,2)),console.log(`Generated index for ${reports.length} reports`);